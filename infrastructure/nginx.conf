# Nginx Load Balancer Configuration for NBA Stats API

upstream nba_api_backend {
    # Load balancing method: least_conn (least connections)
    least_conn;
    
    # Multiple API server instances
    server localhost:8000 weight=1 max_fails=3 fail_timeout=30s;
    server localhost:8001 weight=1 max_fails=3 fail_timeout=30s;
    server localhost:8002 weight=1 max_fails=3 fail_timeout=30s;
    
    # Keep alive connections
    keepalive 32;
}

# Health check endpoint
upstream health_check {
    server localhost:8000;
    server localhost:8001;
    server localhost:8002;
}

server {
    listen 80;
    server_name nba-stats-api.local localhost;
    
    # Logging
    access_log /var/log/nginx/nba_api_access.log;
    error_log /var/log/nginx/nba_api_error.log warn;
    
    # Request limits
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Proxy settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Compression
    gzip on;
    gzip_types application/json text/plain;
    gzip_min_length 1000;
    
    # Health check endpoint (no load balancing)
    location = /health {
        access_log off;
        proxy_pass http://health_check/api/v1/health;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API endpoints with load balancing
    location /api/ {
        proxy_pass http://nba_api_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts for long-running queries
        proxy_connect_timeout 60s;
        proxy_send_timeout 180s;
        proxy_read_timeout 180s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # Static docs
    location /docs {
        proxy_pass http://nba_api_backend/api/v1/docs;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
    }
    
    # Root endpoint
    location / {
        proxy_pass http://nba_api_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Rate limiting zone
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    
    location /api/v1/query {
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://nba_api_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeout for RAG queries
        proxy_read_timeout 300s;
    }
}

# HTTPS configuration (production)
# server {
#     listen 443 ssl http2;
#     server_name nba-stats-api.com;
#     
#     ssl_certificate /etc/ssl/certs/nba-api.crt;
#     ssl_certificate_key /etc/ssl/private/nba-api.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     
#     # Same location blocks as above
# }
